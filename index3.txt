<!DOCTYPE html>
<meta charset="utf-8">
<html>
<head>
		
		<link rel="stylesheet" type="text/css" href="bootstrap.min.css">
		<title>Project 1 - YaHui Liu</title>
</head>

<style> /* set the CSS */

	
	text {
	  font: 10px sans-serif;
	  text-anchor: middle;
	}
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  position: relative;
  width: 960px;
  margin-left: 15%;
  		width: 70%;
		margin-top:5%;
}
	h2{
	text-align: center;
		background-color : cornsilk;
		
		color: gray;
		
	}
	h3{
	
		background-color : 	white;
		
		color: black;
		
	}

	h5{
	
		background-color : darkslategray	;
		color: white;
		
	
	}
	
	img {
    	width: 100%;
  		border: 1px solid gray;
	}
	p {
		text-align: justify;
    	
		background-color:lightslategrey;
		color:white;
	}

	
	
			.axis text {
			  font: 10px sans-serif;
			}

			.axis path,
			.axis line {
			  fill: none;
			  stroke: #000;
			  shape-rendering: crispEdges;
			}

			.bar {
			  fill: steelblue;
			  fill-opacity: .9;
			}

			.x.axis path {
			  display: none;
			}

			label {
			  position: absolute;
			  top: 10px;
			  right: 10px;
			}

	.tooltip {
	  background: #eee;
	  box-shadow: 0 0 5px #999999;
	  color: #333;
	  display: none;
	  font-size: 12px;
	  left: 130px;
	  padding: 10px;
	  position: absolute;
	  text-align: center;
	  top: 95px;
	  width: 80px;
	  z-index: 10;
}
</style>
<body>
			

	<label><input type="checkbox"> Sort salaries <label>
		<br>
		<h5><center>â…¡.Outtime Rate vs. Year</center></h5>
		 <script src="d3.v4.min.js"></script>
	<script>
	
		var margin = {top: 20, right: 20, bottom: 30, left: 40},
		width = 960 - margin.left - margin.right,
		height = 500 - margin.top - margin.bottom;

	

		var x = d3.scaleBand()
					  .range([0, width])
					  .padding(0.1);
		var y = d3.scaleLinear()
					  .range([height, 0]);

		var xAxis = d3.axisBottom();
/*
		var yAxis = d3.svg.axis()
			.scale(y)
			.orient("left")
			.tickFormat(d3.format(".0s"));*/
         var tooltip = d3.select("body")            // NEW
             .append('div')                             // NEW
             .attr('class', 'tooltip');                 // NEW


              tooltip.append('div')                        // NEW
              .attr('class', 'count');                   // NEW
			  
			  
		var svg2 = d3.select("body").append("svg")
			.attr("width", width + margin.left + margin.right-10)
			.attr("height", height + margin.top + margin.bottom)
		  .append("g")
			.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

		d3.csv("overtime.csv", function(error, data) {

		  data.forEach(function(d) {
			d.overtime = +d.overtime;
		  });

		  x.domain(data.map(function(d) { return d.year; }));
		  y.domain([0, d3.max(data, function(d) { return d.overtime; })]);

		  svg2.append("g")
			  .attr("transform", "translate(0," + height + ")")
				.call(d3.axisBottom(x));

		  svg2.append("g")
			  .call(d3.axisLeft(y)
			  .ticks(10)
			  .tickFormat(d3.format(".0s")))
			.append("text")
			  .attr("transform", "rotate(-90)")
			  .attr("y", 6)
			  .attr("dy", ".71em")
			  .style("text-anchor", "end")
			  .text("Overtime Rate");

		 var bar2= svg2.selectAll(".bar")
			  .data(data)
			.enter().append("rect")
			  .attr("class", "bar")
			  .attr("x", function(d) { return x(d.year); })
			  .attr("width", x.bandwidth())
			  .attr("y", function(d) { return y(d.overtime); })
			  .attr("height", function(d) { return height - y(d.overtime); });
			
			bar2.on('mouseover', function(d) {           // NEW
  // Code                                    // NEW
	tooltip.select('.count').html(d.year+' '+d.overtime);
     tooltip.style('display', 'block'); 
   });                                          // NEW

	bar2.on('mouseout', function(d) {            // NEW
  // Code                                    // NEW
 tooltip.style('display', 'none');  
	});     

bar2.on('mousemove', function(d) {                            // NEW
            tooltip.style('top', (d3.event.layerY + 10) + 'px')         // NEW
              .style('left', (d3.event.layerX + 10) + 'px');            // NEW
          });                                                           // NEW

			
		
		  d3.select("input").on("change", change);

		  var sortTimeout = setTimeout(function() {
			d3.select("input").property("checked", true).each(change);
		  }, 2000);

  function change() {
    clearTimeout(sortTimeout);

    // Copy-on-write since tweens are evaluated after a delay.
    var x0 = x.domain(data.sort(this.checked
        ? function(a, b) { return b.overtime - a.overtime; }
        : function(a, b) { return d3.ascending(a.year, b.year); })
        .map(function(d) { return d.year; }))
        .copy();

    svg2.selectAll(".bar")
        .sort(function(a, b) { return x0(a.year) - x0(b.year); });

    var transition = svg.transition().duration(750),
        delay = function(d, i) { return i * 50; };

    transition.selectAll(".bar")
        .delay(delay)
        .attr("x", function(d) { return x0(d.year); });

    transition.select( ".x.axis")
      .call(d3.axisBottom(x))
      .selectAll("g")
        .delay(delay);
  }
});
	
	
	</script>
	
	
</body>
</html>